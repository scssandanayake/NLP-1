# -*- coding: utf-8 -*-
"""tokenization In Spacy Excercise.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tFE-ZncwiYguKd-IXhHHPa10YewFbEu3

# **Spacy Tokenizer Exercise**

### Collecting Data Websites From Think Stats Book Paragraph

(1) Think stats is a free book to study statistics (https://greenteapress.com/thinkstats2/thinkstats2.pdf)

This book has references to many websites from where you can download free datasets. You are an NLP engineer working for some company and you want to collect all dataset websites from this book. To keep exercise simple you are given a paragraph from this book and you want to grab all urls from this paragraph using spacy
"""

text='''
Look for data to help you address the question. Governments are good
sources because data from public research is often freely available. Good
places to start include http://www.data.gov/, and http://www.science.
gov/, and in the United Kingdom, http://data.gov.uk/.
Two of my favorite data sets are the General Social Survey at http://www3.norc.org/gss+website/,
and the European Social Survey at http://www.europeansocialsurvey.org/.
'''

# TODO: Write code here
# Hint: token has an attribute that can be used to detect a url

import spacy

nlp = spacy.blank("en")

doc = nlp(text)
data_websites = [token.text for token in doc if token.like_url ]
data_websites

"""### Figure out all transactions from this text with amount and currency

(2) Extract all money transaction from below sentence along with currency. Output should be,

two $

500 €
"""

transactions = "Tony gave two $ to Peter, Bruce gave 500 € to Steve"

# TODO: Write code here
# Hint: Use token.i for the index of a token and token.is_currency for currency symbol detection

transactions = "Tony gave two $ to Peter, Bruce gave 500 € to Steve"
doc = nlp(transactions)
for token in doc:
    if token.like_num and doc[token.i+1].is_currency:
        print(token.text, doc[token.i+1].text)

"""### Further Reading

https://spacy.io/usage/linguistic-features#tokenization
"""